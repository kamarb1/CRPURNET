def refine_unet(input_img, n_classes=1):
    # Encoder
    c1 = conv_block(input_img, 64)
    p1 = MaxPooling2D((2, 2))(c1)

    c2 = conv_block(p1, 128)
    p2 = MaxPooling2D((2, 2))(c2)

    c3 = conv_block(p2, 256)
    p3 = MaxPooling2D((2, 2))(c3)

    c4 = conv_block(p3, 512)
    p4 = MaxPooling2D((2, 2))(c4)

    # Middle block
    m = CRP_block(p4, 512)
   
    # Decoder

    u4 = concatenate([UpSampling2D((2, 2))(m), c4], axis=-1)
    r4 = residual_block(u4, 512)
    r4 = resnest_block(r4, 512, 512, stride=1, groups=1)

    u3 = concatenate([UpSampling2D((2, 2))(r4), c3], axis=-1)
    r3 = residual_block(u3, 256)
    r3 = resnest_block(r3, 256, 256, stride=1, groups=1)

    u2 = concatenate([UpSampling2D((2, 2))(r3), c2], axis=-1)
    r2 = residual_block(u2, 128)
    r2 = resnest_block(r2, 128, 128, stride=1, groups=1)

    u1 = concatenate([UpSampling2D((2, 2))(r2), c1], axis=-1)
    r1 = residual_block(u1, 64)
    r1 = resnest_block(r1, 64, 64, stride=1, groups=1)

    outputs = Conv2D(n_classes, (1, 1), activation="sigmoid")(r1)
    model = Model(inputs=[input_img], outputs=[outputs])
    return model
